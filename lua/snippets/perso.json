{
  "export default compon ent": {
    "prefix": "export default function",
    "body": ["export default function $1 (){", "    return <div>$1</div>", "}"],
    "description": "simple component"
  },
  "div": {
    "prefix": "div",
    "body": ["<div>$1</div>"],
    "description": "simple div"
  },
  "div classname": {
    "prefix": "divclass",
    "body": ["<div className={`$2`}>$1</div>"],
    "description": "div with classname"
  },
  "form": {
    "prefix": "form",
    "body": ["<form onSubmit={handleSubmit}> ", "$1", "</form>"],
    "description": "simple form in it"
  },
  "input ": {
    "prefix": "inp",
    "body": [
      "<input ",
      "name='$1'",
      "placeholder='$2'",
      "type='text'",
      "onChange={handlechange}",
      "value={$3}",
      " />"
    ],
    "description": "simple input"
  },
  "handlechange": {
    "prefix": "handlechange",
    "body": [
      "const handlechange = (e)=>{",
      "    const {name, value} = e.target",
      "    set$1({...$2, $3})",
      "}"
    ],
    "description": "handlechange function"
  },
  "handleSubmit": {
    "prefix": "handleSubmit",
    "body": [
      "const handleSubmit = (e)=>{",
      "    e.preventDefault()",
      "    $1",
      "}"
    ],
    "description": "handleSubmit function init"
  },
  "useEffect function": {
    "prefix": "useeffect",
    "body": ["React.useEffect(()=>{", "    $1", "}, [])"],
    "description": "useEffect function init"
  },
  "useeffect observator of variable": {
    "prefix": "useeffectobserve",
    "body": ["React.useEffect(()=>{", "    console.log($1)", "}, [$1])"],
    "description": "observing changes on a variable"
  },
  "usestate": {
    "prefix": "-usestate",
    "body": [
      "const [${1:first}, set${1/(.*)/${1:/capitalize}/}] = useState(${2:second})"
    ],
    "description": "simple useState",
    "import": "import React, { useState } from 'react';"
  },
  "var": {
    "prefix": "variable",
    "body": ["const $1 = $2"],
    "description": "une simple variable"
  },
  "arrow function": {
    "prefix": "arrow",
    "body": ["const $1 = ($3)=>{", "    $2", "}"],
    "description": "simple arrow function "
  },
  "console.log": {
    "prefix": "cl",
    "body": ["console.log('$2',$1)"],
    "description": "console"
  },
  "commentary react": {
    "prefix": "cmtreact",
    "body": ["{/* $1 */}"],
    "description": "commentaire react "
  },
  "compoinit": {
    "prefix": "!",
    "body": [
      "export default function $TM_FILENAME_BASE(){",
      "    return <div> $TM_FILENAME_BASE </div>",
      "}"
    ],
    "description": "compo init"
  },
  "map loop": {
    "prefix": "arrayloop",
    "body": ["$1.map((item,i)=>{ return <$3 key={$2} >$4<$3>})"],
    "description": "array looping "
  },
  "if": {
    "prefix": "if",
    "body": ["if($1){", "    $2", "}"],
    "description": "if statement"
  },
  "tertiary": {
    "prefix": "?",
    "body": ["$1 ? $2 : $3"],
    "description": "if tertiary"
  },
  "className": {
    "prefix": "-cn",
    "body": ["className={`$1`}"],
    "description": "className "
  },
  "tag": {
    "prefix": "tag",
    "body": ["<$1>$2</$1>"],
    "description": "tag"
  },
  "tag close": {
    "prefix": "ctag",
    "body": ["<$1 />"],
    "description": "closed tag"
  }
}
